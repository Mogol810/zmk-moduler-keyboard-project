#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&bt0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        bt0: to_layer_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1 &tog_off 0>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 0>,
                <&macro_wait_time 500>;

            label = "TO_LAYER_0";
        };

        bt1: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1 &tog_off 0>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 500>,
                <&tog_on 1>;

            label = "NEW_MACRO";
        };

        passwordt: passwordt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCLAMATION &kp LS(K) &kp U &kp R &kp A &kp I &kp T &kp O &kp NUMBER_0 &kp NUMBER_2 &kp NUMBER_0 &kp NUMBER_3 &kp NUMBER_2 &kp NUMBER_3 &kp EXCLAMATION>;
            label = "PASSWORDT";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&bt0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac {
            bindings = <
&kp Q             &kp L         &kp U      &kp COMMA  &kp PERIOD                                                &kp F        &kp W  &kp R  &kp Y  &kp P
&kp E             &kp I         &kp A      &kp O      &kp MINUS      &mkp MB3                    &kp EQUAL      &kp K        &kp T  &kp N  &kp S  &kp H
&mt LEFT_SHIFT Z  &kp X         &kp C      &kp V      &kp SEMICOLON  &kp BACKSLASH               &kp SLASH      &kp G        &kp D  &kp M  &kp J  &kp B
&kp LEFT_GUI      &kp LEFT_ALT  &kp LCTRL  &mkp MB1   &lt 5 SPACE    &mt LEFT_GUI LG(SPACE)      &kp BACKSPACE  &lt 3 ENTER                       &lt 6 DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        win {
            bindings = <
&kp Q             &kp L         &kp U         &kp COMMA  &kp PERIOD                                                    &kp F        &kp W  &kp R  &kp Y  &kp P
&kp E             &kp I         &kp A         &kp O      &kp MINUS      &mkp MB3                        &kp EQUAL      &kp K        &kp T  &kp N  &kp S  &kp H
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V      &kp SEMICOLON  &kp BACKSLASH                   &kp SLASH      &kp G        &kp D  &kp M  &kp J  &kp B
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &mkp MB1   &lt 5 SPACE    &mt LEFT_CONTROL LC(SPACE)      &kp BACKSPACE  &lt 2 ENTER                       &lt 6 DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        ARROW_Win {
            bindings = <
&kp TAB         &trans     &kp PG_UP      &trans     &trans                           &trans  &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)  &trans
&kp BACKSPACE   &kp HOME   &kp PAGE_DOWN  &kp END    &trans       &trans      &trans  &trans  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT    &kp DELETE
&kp LEFT_SHIFT  &kp LC(X)  &kp LC(C)      &kp LC(V)  &trans       &trans      &trans  &trans  &trans           &trans          &trans       &trans
&trans          &trans     &trans         &trans     &lt 7 SPACE  &trans      &trans  &trans                                                &trans
            >;
        };

        ARROW_Mac {
            bindings = <
&kp TAB         &kp LG(Z)           &kp LG(LS(Z))  &trans               &trans                           &trans  &kp LS(LC(TAB))  &kp UP_ARROW    &kp LC(TAB)      &trans
&kp BACKSPACE   &kp LG(LEFT_ARROW)  &kp LG(A)      &kp LG(RIGHT_ARROW)  &trans       &trans      &trans  &trans  &kp LEFT         &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp DELETE
&kp LEFT_SHIFT  &kp LG(X)           &kp LG(C)      &kp LG(V)            &trans       &trans      &trans  &trans  &trans           &trans          &trans           &trans
&trans          &trans              &trans         &trans               &lt 7 SPACE  &trans      &trans  &trans                                                    &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans    &trans                        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &mkp MB1  &trans  &mkp MB2      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&kp ESCAPE    &kp NUMBER_7  &kp NUMBER_8   &kp NUMBER_9  &kp MINUS                      &trans              &kp F7  &kp F8  &kp F9  &kp F10
&kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5   &kp NUMBER_6  &kp PLUS   &trans      &trans  &kp LG(LEFT_SHIFT)  &kp F4  &kp F5  &kp F6  &kp F11
&kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp EQUAL  &trans      &trans  &passwordt          &kp F1  &kp F2  &kp F3  &kp F12
&kp SLASH     &kp LG(Z)     &kp LG(LS(Z))  &trans        &trans     &trans      &trans  &lt 7 ENTER                                 &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt0    &bt1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans  &trans  &trans        &trans        &bt BT_CLR
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans  &trans  &trans        &trans        &bt BT_CLR_ALL
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                      &trans
            >;
        };

        symbols {
            bindings = <
&trans     &kp AMPERSAND    &kp ASTERISK  &trans     &trans                                &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans             &trans
&kp TILDE  &kp DOLLAR       &kp PERCENT   &kp CARET  &trans  &trans             &trans     &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SQT            &kp SEMICOLON
&trans     &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &trans  &kp BACKSLASH      &kp SLASH  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp COLON
&trans     &trans           &trans        &trans     &trans  &trans             &trans     &trans                                                                  &trans
            >;
        };

        layer_8 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
